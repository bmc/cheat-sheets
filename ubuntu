 1. Getting sound to work.

    https://help.ubuntu.com/community/SoundTroubleshooting

    Specific to the Intel ICH8 (in many laptops):

    http://linuxtechie.wordpress.com/2007/10/19/getting-intel-ich8-family-rev-3-sound-card-to-work-in-gutsy/

    Also, make sure the sound isn't (accidentally) muted.

 2. Getting Broadcom wireless NIC to work. (This is the NIC in Dell laptops.)

    https://help.ubuntu.com/community/WifiDocs/Driver/bcm43xx/Feisty_No-Fluff

    (Be sure the Wifi switch on the side of the laptop is on!)

 3. Changing size of Gnome terminal. From
    http://ubuntuforums.org/showthread.php?t=15471

    The gnome-terminal uses a termcap file for its basic settings. To change
    these, edit /usr/share/vte/termcap/xterm

    Change the "li#24" entry to some other size. Save the file, and the next
    spawned Gnome terminal will take that size.

    Doesn't always work. If not, use --geometry=80x44 (or whatever)

 4. Set keybindings for GTK applications:

    gconftool-2 --set /desktop/gnome/interface/gtk_key_theme Emacs --type string

 5. Getting Adobe Acrobat Reader (and other proprietary stuff) for Ubuntu
    http://www.ubuntugeek.com/how-to-install-adobe-pdf-reader-811-with-plug-in-for-mozilla-firefox-in-gutsy-gibbon.html

 6. Rough equivalent to "chkconfig" is "update-rc.d"

 7. Install Sun JDK 6. From
    http://broersa.wordpress.com/2008/02/20/install-sun-jdk-6-on-ubuntu-gutsy/

    sudo apt-get install sun-java6-jdk sun-java6-plugin sun-java6-fonts
    sudo update-java-alternatives --set java-6-sun

 8. Mounting remote Windows or Samba shares.
    - apt-get install smbfs
    - Then, add something like this to /etc/fstab
      //tera1/share /mnt/tera1 cifs username=root,password=,noauto,uid=0,rw,suid 0 0

 9. When removing a package, you get 'subprocess pre-removal script returned
    error', and the package refuses to go away. Solution:

    - Go to /var/lib/dpkg/info
    - Look for package.prerm
    - Remove it
    - Try again

10. Getting Gnome desktop to quit prompting for trash emptying:

    See "gnome" cheat sheet.

11. Show the Computer, Home and Trash desktop icons in Gnome.
    From https://help.ubuntu.com/6.10/ubuntu/desktopguide/C/ch12s07.html

    - Run gconf-editor
    - Choose: apps > nautilus > desktop
    - Enable/disable whatever. Changes take place immediately.

12. Playing WMV files, and other proprietary stuff:
    https://help.ubuntu.com/community/RestrictedFormats

13. Emacs with decent fonts:

    https://launchpad.net/~ubuntu-elisp/+archive/ppa
    http://emacs.orebokech.com/

14. Adding a new disk and putting it in a logical volume.

    a) Add the disk.

    b) Use the GUI Disk Utility to format the disk (i.e., to create
       the partition table). Do NOT create a file system.

    c) Use "fdisk -l" to verify which device is associated with the new
       disk

    d) At the command line. create a physical volume. Let's suppose the
       disk is "/dev/sdb":

       # pvcreate /dev/sdb

       Doesn't hurt to verify the creation with "pvdisplay".

    e) Create the volume group. With a single partition:

       # vgcreate drive2 /dev/sdb

       "drive2" is an arbitrary name for the volume group. It can be anything,
       as long as it doesn't clash with an existing volume group's name.

       To group multiple partitions in the same group:

       # vgcreate drive2 /dev/sdb /dev/sdc ...

    f) Run "vgdisplay" to show the new volume group configuration.

    g) Create logical volumes:

       # lvcreate --name usrlocal --size 80G drive2
       # lvcreate --name home2 --size 160G drive2

       To use 100% of all disks:

       # lvcreate --name foo --extents 100%FREE drive3

    h) Format and mount the new volumes:

       # mkfs.ext4 /dev/drive2/usrlocal
       # mkfs.ext4 /dev/drive2/home2
       # mount /dev/drive2/usrlocal /usr/local
       # mount /dev/drive2/home2 /home2

    Reference: http://www.davelachapelle.ca/guides/ubuntu-lvm-guide/

15. Using logical volumes for virtualization.

    a) Ensure that a logical volume exists. See #14, (a) through (g).

    b) Ensure that the virtual machine isn't running.

    c) If moving from a file-based image (.img file):

       # dd /path/to/machine.img /dev/volgroupname/lvname

       e.g.:

       # dd /var/lib/libvirt/images/foobar.img /dev/virtimages/foobar

       This step, obviously, can take awhile.

    d) Using virt-manager, edit the virtual machine's configuration, and
       create or edit an IDE device to point to the logical volume name
       (e.g., /dev/virtimages/foobar).

       Note: This also works, but it's more error-prone:

       $ virsh edit foobar

       --- edit the XML, removing the existing disk image and replacing
       --- it with:

       <disk type='block' device='disk'>
         <source dev='/dev/virtimages/foobar'/>
         <target dev='hda' bus='ide'/>
       </disk>

    e) Fire up the virtual machine.

    Reference: http://blog.codefront.net/2010/02/01/setting-up-virtualization-on-ubuntu-with-kvm/

16. Sharing a printer to Windows

    See: https://help.ubuntu.com/community/NetworkPrintingFromWinXP

    Works with Windows 7.
